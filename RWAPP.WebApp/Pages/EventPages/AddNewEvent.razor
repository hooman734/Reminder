@page "/Add-New-Event"
@using System.Globalization

@inject NavigationManager NavigationManager
@inject IAddNewEventUseCase AddNewEventUseCase

<h3>Add New Event</h3>
<br />

<div class="container-fluid col-7">
    <EditForm Model="@_event" OnValidSubmit="SaveNewEvent">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        
        <div class="form-group">
            <label for="name">Name:</label>
            <InputText id="name" class="form-control" @bind-Value="_event.Name"></InputText>
        </div>
        <br/>
        <div class="form-group">
            <label for="description">Description:</label>
            <InputTextArea id="description" class="form-control" @bind-Value="_event.Description"></InputTextArea>
        </div>
        <br/>
        <div class="form-group">
            <label for="date">Due Date:</label>
            <InputDate id="date" class="form-control" DisplayName="Due Date" @bind-Value="_event.DueDate"></InputDate>
        </div>
        <br/>
        <div class="form-group">
            <label for="link">Link:</label>
            <InputText id="link" class="form-control" @bind-Value="_event.Link"></InputText>
        </div>
        <br />
        <div class="btn-group">
            <button type="submit" class="btn btn-success">Save!</button>
            <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel!</button>
        </div>
    </EditForm>

</div>

@code {

    private Event _event = new();

    private async Task SaveNewEvent()
    {
        await AddNewEventUseCase.ExecuteAsync(_event);
        NavigationManager.NavigateTo("/Reminder-all-events");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/Reminder-all-events");
    }

}
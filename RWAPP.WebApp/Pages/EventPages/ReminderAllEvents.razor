@page "/Reminder-all-events"
@inject IViewAllEventsByNameUseCase ViewAllEventsByNameUseCase
@inject NavigationManager NavigationManager

<h3>Reminder All Events</h3>

<br />

<div class="input-group mb-3">
    <input @bind="_name" @onfocusout="OnSearch" type="text" class="form-control" placeholder="Event's name" aria-label="Recipient's username" aria-describedby="basic-addon2">
    <div class="input-group-append">
        <div class="btn-group">
            <button class="btn btn-success" type="button" @onclick="OnSearch">Search!</button>
            <button class="btn btn-primary" type="button" @onclick="OnAddEvent">Add Event!</button> 
        </div>
    </div>
</div>

<br />

<div class="container-fluid">
    <div class="d-flex flex-wrap">
         @foreach (var e in _events!)
            {
                <EventCard E=@e/>
            }
    </div>
</div>


@code {
    
    private string _name  = string.Empty;
    
    private List<Event>? _events;
    
    protected override async Task OnInitializedAsync()
    {
        _events = (await ViewAllEventsByNameUseCase.ExecuteAsync(_name)).ToList();
    }
    

    private async Task OnSearch()
    {
        _events = (await ViewAllEventsByNameUseCase.ExecuteAsync(_name)).ToList();
    }

    private void OnAddEvent()
    {
        NavigationManager.NavigateTo("/add-new-event");
    }

}